[
  {
    "date": "2022-03-01",
    "dailyPosts": [
      {
        "slug": "2022-03-01-A",
        "type": "video",
        "duration": "6",
        "title": "If Else in Angular, ngIf directive in Angular, Angular Tutorial #5",
        "url": "https://www.youtube.com/watch?v=6998sqU-zIY",
        "description": "",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "Hike Coding Knowledge",
        "authorUrl": "https://www.youtube.com/user/rajupaul71/videos",
        "speakers": [],
        "tags": ["Directives"]
      },
      {
        "slug": "2022-03-01-B",
        "type": "video",
        "duration": "16",
        "title": "Pipes in Angular 13 | how to create custom pipes in Angular | pass parameter to pipes | part - 16",
        "url": "https://www.youtube.com/watch?v=U1uIO-869QI",
        "description": "Topics covered: what is a pipe, how to use a pipe, types of pipes, pipe with parameter, how to use 2 pipes, custom pipes",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "Nihira Techiees  ",
        "authorUrl": "https://www.youtube.com/channel/UCsbmVmB_or8sVLLEq4XhE_A/videos",
        "speakers": [],
        "tags": ["Pipes"]
      },
      {
        "slug": "2022-03-01-C",
        "type": "video",
        "duration": "12",
        "title": "Angular NgRx Tutorial | Episode 5 | Creating an NgRx Effect and calling the service within it",
        "url": "https://www.youtube.com/watch?v=KiezuugiUvQ",
        "description": "Watch this video if you want to integrate the Effects Module and call all your services from the Effects. We will also see what the dependencies are for an effect to be used in NgRx app while going over the syntax to write an effect.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "Prasad Rao",
        "authorUrl": "https://www.youtube.com/channel/UCkRE94ToJj2jhlo3seDThaw/videos",
        "speakers": ["Prasad Rao"],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-03-01-D",
        "type": "blog",
        "title": "Internationalize your Angular applications using ngx-translate",
        "url": "https://medium.com/@bonface.oywa/internationalize-your-angular-applications-using-ngx-translate-50148d19defc",
        "description": "Internationalization is a process that occurs when a firm decides to expand into new territories, which may or may not utilize the same language as its original applications.\n\nngx-translate is an Angular internationalization library that allows you to set translations for your visible content across many languages and simply switch between them.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com/tag/angular/latest",
        "authorName": "Bonface Oywa",
        "authorUrl": "https://medium.com/@bonface.oywa",
        "speakers": ["Bonface Oywa"],
        "tags": ["Internationalization", "ngx-translate"]
      },
      {
        "slug": "2022-03-01-E",
        "type": "blog",
        "title": "Call by Value and Call by Reference in Angular",
        "url": "https://souvikpl.medium.com/call-by-value-and-call-by-reference-in-angular-59980f005e3e",
        "description": "In this article, we'll quickly understand the popular concept of Call by value and Call by reference in JavaScript. Then, we'll understand this concept in the Angular framework by doing an exercise.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com/tag/angular/latest",
        "authorName": "Souvik Paul",
        "authorUrl": "https://souvikpl.medium.com",
        "speakers": ["Souvik Paul"],
        "tags": []
      },
      {
        "slug": "2022-03-01-F",
        "type": "video",
        "duration": "4",
        "title": "3 ways to use ng-container for clean and fast Angular apps!",
        "url": "https://www.youtube.com/watch?v=8z576TNeE6g",
        "description": "",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "Zoaib Khan",
        "authorUrl": "https://www.youtube.com/c/ZoaibKhan/videos",
        "speakers": ["Zoaib Khan"],
        "tags": ["ng-container"]
      },
      {
        "slug": "2022-03-01-G",
        "type": "blog",
        "title": "RxJS based state management in Angular - Part III",
        "url": "https://elmota.com/rxjs-based-state-management-in-angular-part-iii",
        "description": "I am writing this part, knowing there will be an IV, because I am drifting away, experimenting more features. Last time we spoke, I told you we have a challenge of keeping up with the total number of records coming from the server, and updating it when user adds or removes. So let's work backwards and see how the end result should look like.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "Hashnode",
        "sourceUrl": "https://hashnode.com/n/angular",
        "authorName": "Ayyash",
        "authorUrl": "https://hashnode.com/@ayyash",
        "speakers": [],
        "tags": ["RxJS", "State Management"]
      },
      {
        "slug": "2022-03-01-H",
        "type": "video",
        "duration": "2",
        "title": "Stopping EventBubbling in Angular",
        "url": "https://www.youtube.com/watch?v=LmeEs0h5gOQ",
        "description": "pass Event as argument as  $event into the function, then event.stopPropagation(); inside the function and it works ... just like in JS",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "CoderDmitri",
        "authorUrl": "https://www.youtube.com/channel/UCIhbSiOqg2D6F_bK2rMVn5g/videos",
        "speakers": [],
        "tags": []
      },
      {
        "slug": "2022-03-01-J",
        "type": "video",
        "duration": "57",
        "title": "Angular Community Meetup | January 2022 | Ankita Sood & Alain Chautard",
        "url": "https://www.youtube.com/watch?v=QuH2pUBeNJ4",
        "description": "This month's Angular Community Meetup featured:\nAnkita Sood\nGet Context About Host_Context()!\nAlain Chautard\nNgModules: Useful... Or Not?",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "",
        "authorUrl": "",
        "speakers": ["Ankita Sood", "Alain Chautard"],
        "tags": [":host-context", "Modules"]
      },
      {
        "slug": "2022-03-01-K",
        "type": "blog",
        "duration": "",
        "title": "Angular Basics: Getting Data From Fragments and Query Params",
        "url": "https://www.telerik.com/blogs/angular-basics-getting-data-fragments-query-params",
        "description": "In this post, we are going to look into how you can retrieve data from URL query parameters in Angular inside the component using the Router module.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "Progress Telerik Blog",
        "sourceUrl": "https://www.telerik.com/blogs/web-angular",
        "authorName": "Nwose Lotanna Victor",
        "authorUrl": "https://www.telerik.com/blogs/author/nwose-lotanna",
        "speakers": ["Nwose Lotanna Victor"],
        "tags": ["Routing", "Route Params", "Query Params"]
      },
      {
        "slug": "2022-03-01-L",
        "type": "podcast",
        "duration": "72",
        "title": "AngularAir - Remedy app with Shmuela Jacobs",
        "url": "https://www.youtube.com/watch?v=96pR_pFnsGg",
        "description": "",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "AngularAir",
        "authorUrl": "https://www.youtube.com/c/AngularAirPodcast/videos",
        "speakers": ["Shmuela Jacobs"],
        "tags": ["RxJS", "Hot vs Cold", "shareReplay"]
      },
      {
        "slug": "2022-03-01-M",
        "type": "video",
        "duration": "60",
        "title": "State of Angular March 2022",
        "url": "https://www.youtube.com/watch?v=_0a4fbzZWQE",
        "description": "Keep up with modern web technology advancements through these special “State of” events. This month, we're bringing you “State of Angular”. Hear from the Angular core team about upcoming releases, recent milestones, and community initiatives!",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "This Dot Media",
        "authorUrl": "https://www.youtube.com/c/ThisDotMedia/videos",
        "speakers": ["Mark Thompson", "Alex Rickabaugh", "Madleina Scheidegger", "Rob Ocel", "Chris Trzesniewski"],
        "tags": []
      },
      {
        "slug": "2022-03-01-N",
        "type": "blog",
        "title": "Getting into software testing with Jest",
        "url": "https://dev.to/aniket762/getting-into-software-testing-with-jest-2ca0",
        "description": "Starting from open-source projects to enterprise software, most softwares have a huge codebase. Don't believe me? Here is a fact! Some of the Google codebases have over 2 billion lines! Understanding and debugging each line manually is something that probably only Superman can do. So when contributing to a project, it is essential to keep in mind that your code doesn't disrupt the existing functionalities.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to/search?q=angular&sort_by=published_at&sort_direction=desc",
        "authorName": "Aniket Pal",
        "authorUrl": "https://dev.to/aniket762",
        "speakers": ["Aniket Pal"],
        "tags": ["Testing", "Jest"]
      },
      {
        "slug": "2022-03-01-P",
        "type": "blog",
        "title": "Easily consume back-end API's in Angular 4x faster!",
        "url": "https://dev.to/androizer/easily-consume-back-end-apis-in-angular-4x-faster-hpn",
        "description": "... Well, I have come up with a solution which did helped me in consuming the API's 4x faster. The number quantified over here may differ for other's but it surely proved to be right for me.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to/search?q=angular&sort_by=published_at&sort_direction=desc",
        "authorName": "Akshay Mahajan",
        "authorUrl": "https://dev.to/androizer",
        "speakers": ["Akshay Mahajan"],
        "tags": []
      },
      {
        "slug": "2022-03-01-Q",
        "type": "blog",
        "title": "Creating a dynamic component is now easier: changes in Angular 13",
        "url": "https://medium.com/@cbgdn/creating-a-dynamic-component-is-now-easier-changes-in-angular-13-990b28078968",
        "description": "...Here's where Angular can help us; it can create components at runtime and render them using a createComponent method of the ViewContainerRef. But the API of this method has changed in version 13 of the framework. From this article, you will learn how the process of dynamic component creation looks now.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com/tag/angular/latest",
        "authorName": "Anastasia Anisimova",
        "authorUrl": "https://medium.com/@cbgdn",
        "speakers": ["Anastasia Anisimova"],
        "tags": ["Components", "Dynamic"]
      },
      {
        "slug": "2022-03-01-R",
        "type": "video",
        "duration": "3",
        "title": "RxJs finalize operator explained",
        "url": "https://www.youtube.com/watch?v=8ackjL3FsRM",
        "description": "The finalize operator is a very handy operator to perform side effects or tear-down logic. Learn how to use it and apply it in your project.",
        "datePosted": "2022-03-01",
        "dateSource": "2022-03-01",
        "postedBy": "Steve Witman",
        "sourceSite": "YouTube",
        "sourceUrl": "https://youtube.com",
        "authorName": "Kevin Kreuzer",
        "authorUrl": "https://www.youtube.com/channel/UCFT4YVZl7AFia7rZBTEvavw/videos",
        "speakers": ["Kevin Kreuzer"],
        "tags": ["RxJS", "finalize"]
      }
    ] 
  }    
]
