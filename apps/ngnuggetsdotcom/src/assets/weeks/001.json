[
  {
    "date": "2022-01-01",
    "dailyPosts": [
      {
        "slug": "2022-01-01-A",
        "type": "video",
        "duration": "11",
        "title": "Angular Unit testing 24 | Unit testing Form Control valueChanges Property Reactive Forms | Part 6",
        "url": "https://www.youtube.com/watch?v=RGNdT3vb4kM",
        "description": "In this video, you will learn How to test Angular valueChanges property of form control in reactive forms.",
        "datePosted": "2022-01-01",
        "dateSource": "2022-01-01",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "TechshareSKK",
        "authorUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "speakers": ["Sai Kumar Korthivada"],
        "tags": ["Testing", "Forms", "Reactive Forms", "valueChanges"]
      },
      {
        "slug": "2022-01-01-B",
        "type": "video",
        "duration": "36",
        "title": "Angular Beginner to Advanced | Day 5 | WebAppUpgrade",
        "url": "https://www.youtube.com/watch?v=yXfAU3dGvaU",
        "description": "In five days take your Angular skills to the next level, from beginners to Advanced.",
        "datePosted": "2022-01-01",
        "dateSource": "2021-12-31",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "The Web Dev",
        "authorUrl": "https://www.youtube.com/channel/UCRf7mazcufqZxd2pR3oQJuQ/videos",
        "speakers": ["Nabendu Biswas"],
        "tags": []
      },
      {
        "slug": "2022-01-01-C",
        "type": "blog",
        "title": "Creating custom pagination component with Angular",
        "url": "https://medium.com/@kirill.kovzel/creating-custom-pagination-component-with-angular-9c6c93fdf0f0",
        "description": "Pagination is undoubtedly one of the most popular approaches to dozed content representation. And it's absolutely fine to use some out-of-the-box solutions for it if your application uses some library like NgBootstrap or Material UI all round and the designs and functionality they provide is satisfactory to you.\n\nBut once you bump into the need of re-styling or customization of it you usually may choose the way of creating a wrapping component which uses this out-of-the-box component inside and re-define its behaviour or styles by breaking original component encapsulation.",
        "datePosted": "2022-01-01",
        "dateSource": "2022-01-01",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Kirill Kovzel",
        "authorUrl": "https://medium.com/@kirill.kovzel",
        "speakers": ["Kirill Kovzel"],
        "tags": ["Pagination", "Custom"]
      },
      {
        "slug": "2022-01-01-D",
        "type": "video",
        "duration": "9",
        "title": "HTTP Interceptor in Angular",
        "url": "https://www.youtube.com/watch?v=bMyP7WVmzbU",
        "description": "",
        "datePosted": "2022-01-01",
        "dateSource": "2022-01-01",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Vikas",
        "authorUrl": "https://www.youtube.com/c/RealAppsniksviks/videos",
        "speakers": [],
        "tags": ["HttpInterceptors"]
      },
      {
        "slug": "2022-01-01-E",
        "type": "video",
        "duration": "21",
        "title": "LocalStorage, sessionStorage in ANGULAR | Local Storage with example.",
        "url": "https://www.youtube.com/watch?v=HznHppdgBpA",
        "description": "Creating a Angular application. Create a component with a form if needed.  Create a click event to call and store data in localstorage and set the data.",
        "datePosted": "2022-01-01",
        "dateSource": "2021-01-01",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "coding wall",
        "authorUrl": "https://www.youtube.com/channel/UCxjJshhu0QBbztNZei4udOA/videos",
        "speakers": [],
        "tags": ["localStorage", "sessionStorage"]
      },
      {
        "slug": "2022-01-01-F",
        "type": "blog",
        "title": "View Encapsulation in Angular",
        "url": "https://makesh-kumar.medium.com/view-encapsulation-in-angular-fbebf7467072",
        "description": "Encapsulation is one of the fundamental concepts in object-oriented programming (OOP). It defines the idea that all the data and methods that operate on that data are kept private or encapsulated in a single unit. It is like hiding the implementation detail from the outside world. The consumer of encapsulated object know that it works, but do not know how it works.",
        "datePosted": "2022-01-01",
        "dateSource": "2022-01-01",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Makesh Kumar",
        "authorUrl": "https://makesh-kumar.medium.com",
        "speakers": ["Makesh Kumar"],
        "tags": ["ViewEncapsulation"]
      },
      {
        "slug": "2022-01-01-G",
        "type": "blog",
        "title": "Custom Angular reactive form with SVG and clickable elements",
        "url": "https://dev.to/hanneslim/how-to-build-a-custom-angular-reactive-svg-form-with-clickable-elements-1a5k",
        "description": "During the Corona pandemic, many companies and employees discovered home office. As a result, it became apparent that not every employee required his own workstation. Instead, companies now offer a shared desk model. This means that employees flexibly share workstations. Often, you can reserve your desired workstation in advance. This workplace booking function has attracted me for some time. I find the possibility to create a Custom Reactive Form in Angular, which also includes an office plan, particularly interesting. In the Custom Angular Reactive SVG Form there is the possibility to select a workstation from the office plan and to mark it with a color. As soon as a workstation has been chosen, the form will be validated and the desk will be bookable. In the following the implementation is explained step by step.",
        "datePosted": "2022-01-01",
        "dateSource": "2022-01-01",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "hanneslim",
        "authorUrl": "https://dev.to/hanneslim",
        "speakers": [],
        "tags": ["Forms", "Reactive Forms", "Custom"]
      }
    ]
  },
  {
    "date": "2022-01-02",
    "dailyPosts": [
      {
        "slug": "2022-01-02-A",
        "type": "blog",
        "title": "Built-In Angular Pipes - Part 1",
        "url": "https://dev.to/this-is-angular/built-in-angular-pipes-part-1-23ec",
        "description": "Today we will be learning on a very important concept provided by Angular - Pipes. The main use of Pipe is to transform the appearance of the data before showing to the user.",
        "datePosted": "2022-01-02",
        "dateSource": "2022-01-02",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Anubhab Mukherjee",
        "authorUrl": "https://dev.to/anubhab5",
        "speakers": ["Anubhab Mukherjee"],
        "tags": ["Pipes"]
      },
      {
        "slug": "2022-01-02-B",
        "type": "video",
        "duration": "13",
        "title": "Angular 13 new features | Micro Front End is coming | Angular 14 updates",
        "url": "https://www.youtube.com/watch?v=FgItZM4yHvY",
        "description": "Angular 13 has been released. Let's have a look at the new in this Angular 13 tutorial. we'll learn what's the new feature of the Angular 13 version. We will also talk about the Angular 14 updates and big news about the Micro Font End in the Angular framework.",
        "datePosted": "2022-01-02",
        "dateSource": "2021-01-01",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "codeWithAmi",
        "authorUrl": "https://www.youtube.com/c/codeWithAmi/videos",
        "speakers": [],
        "tags": []
      },
      {
        "slug": "2022-01-02-C",
        "type": "blog",
        "title": "Firebase Authentication - Getting started with Firebase Authentication using Angular code example",
        "url": "https://medium.com/@liatkomp/firebase-authentication-f0445ac732cb",
        "description": "Website application development brings us many challenges. One of them is users' identity. Using Firebase Authentication makes this mission simpler, saves us a significant amount of time, and speeds up code implementation. This post will cover Firebase Authentication — how, when, and why to use Firebase Authentication.",
        "datePosted": "2022-01-02",
        "dateSource": "2022-01-01",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Liat Kompas",
        "authorUrl": "https://medium.com/@liatkomp",
        "speakers": ["Liat Kompas"],
        "tags": ["Firebase", "Auth"]
      },
      {
        "slug": "2022-01-02-D",
        "type": "video",
        "duration": "13",
        "title": "Angular Material Cards Tutorial",
        "url": "https://www.youtube.com/watch?v=R762IDrdxP0",
        "description": "In this Angular material tutorial you will learn How to use Angular Material Cards Tutorial",
        "datePosted": "2022-01-02",
        "dateSource": "2022-01-02",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "AyyazTech",
        "authorUrl": "https://www.youtube.com/c/AyyazTech/videos",
        "speakers": ["Ayyaz Zafar"],
        "tags": ["Angular Material"]
      },
      {
        "slug": "2022-01-02-E",
        "type": "blog",
        "title": "Animating a counter with Angular — Using requestAnimationFrame()",
        "url": "https://medium.com/@MicBDev/animating-a-counter-with-angular-using-requestanimationframe-5e7b020aa3e",
        "description": "Working on my last project, I had to come up with a series of four animated counters and I just couldn't resolve to import another *.js to my project for such a simple feature.",
        "datePosted": "2022-01-02",
        "dateSource": "2022-01-02",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Mic B",
        "authorUrl": "https://medium.com/@MicBDev",
        "speakers": [],
        "tags": ["Animations", "requestAnimationFrame"]
      },
      {
        "slug": "2022-01-02-F",
        "type": "video",
        "duration": "20",
        "title": "Angular Tutorial - Reactive Forms Basics",
        "url": "https://www.youtube.com/watch?v=cCGO_wDOvK4",
        "description": "This video gives a basic overview of Reactive forms usage in an Angular application. It includes the setup of a form, usage of the built-in validators and the display of error messages.",
        "datePosted": "2022-01-02",
        "dateSource": "2022-01-02",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Code With Lyle",
        "authorUrl": "https://www.youtube.com/channel/UCX9kUAaYYm6x7uojvxXx7UA/videos",
        "speakers": [],
        "tags": ["Forms", "Reactive Forms"]
      }
    ]
  },
  {
    "date": "2022-01-03",
    "dailyPosts": [
      {
        "slug": "2022-01-03-A",
        "type": "blog",
        "title": "Key Strategies to Improve your Angular Codebase Instantly!",
        "url": "https://martha-7987.medium.com/key-strategies-to-improve-your-angular-codebase-instantly-5b8c4fa47cd3",
        "description": "Utilizing the Angular framework for building an app is immensely beneficial. Nevertheless, coding in Angular can turn tricky at times, thereby adversely affecting the code quality. Thankfully, there are certain tried and tested strategies that will instantly improve the quality of your Angular codebase. This post provides Angular Development Company with detailed insights into these ingenious strategies. Take a look!",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-02",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Martha Jones",
        "authorUrl": "https://martha-7987.medium.com",
        "speakers": ["Martha Jones"],
        "tags": []
      },
      {
        "slug": "2022-01-03-B",
        "type": "video",
        "duration": "20",
        "title": "Angular - Feature Module",
        "url": "https://www.youtube.com/watch?v=MXYuPq8Vjms",
        "description": "",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-02",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Krishna Chaitanya Tech Center",
        "authorUrl": "https://www.youtube.com/channel/UC6hjO6A1FvKKfMlAA7EOJDA/videos",
        "speakers": [],
        "tags": ["Modules"]
      },
      {
        "slug": "2022-01-03-C",
        "type": "podcast",
        "duration": "41",
        "title": "S1E28 | Joe Eames on Pair Programming",
        "url": "https://www.spreaker.com/user/14532324/s1e28-joe-eames-on-pair-programming?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "description": "For this episode of NgXP, Joe Eames from ng-conf and Thinkster.io joins us to discuss the pros and cons and the ins and outs of pair programming. What exactly is pair programming and why would you want to invest time in such a process? Who exactly is it for? What are the best practices for pair programming and when is it most effective? You'll get answers to all these questions and so much more!",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "Spreaker",
        "sourceUrl": "https://spreaker.com",
        "authorName": "Angular Experience",
        "authorUrl": "https://angular-experience.web.app/episodes",
        "speakers": ["Joe Eames", "Brooke Avery", "Erik Slack"],
        "tags": []
      },
      {
        "slug": "2022-01-03-D",
        "type": "blog",
        "title": "How to Add Route Guard for Angular Applications",
        "url": "https://javascript.plainenglish.io/how-to-add-route-guard-for-angular-applications-309f3b0ca845",
        "description": "Sometimes you might need to restrict certain pages/routes to the user, in your Angular application. For instance, there might be a page that can only be supposed to accessed by logged-in users. So it would be great if we could prevent users from going to this page without login into the system. This kind of functionality can be achieved by route guards.",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Kanchana Ranmuthu",
        "authorUrl": "https://kanchana-rdg.medium.com",
        "speakers": ["Kanchana Ranmuthu"],
        "tags": ["Routing", "Route Guards"]
      },
      {
        "slug": "2022-01-03-E",
        "type": "video",
        "duration": "214",
        "title": "Angular HTTP API | Full Course",
        "url": "https://www.youtube.com/watch?v=k8qDGBFPfXk",
        "description": "Almost all Angular applications need to make HTTP requests to a back-end web API to retrieve, save, update, and delete data (CRUD Operations).",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Get Arrays",
        "authorUrl": "https://www.youtube.com/c/GetArrays/videos",
        "speakers": [],
        "tags": ["HTTP"]
      },
      {
        "slug": "2022-01-03-F",
        "type": "video",
        "duration": "13",
        "title": "Angular Tutorial - Sharing data with @Input and @Ouput",
        "url": "https://www.youtube.com/watch?v=igcxMETL1XE",
        "description": "This video gives a basic overview of sharing data using the @Input and @Output decorators in an Angular application.",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Code With Lyle",
        "authorUrl": "https://www.youtube.com/channel/UCX9kUAaYYm6x7uojvxXx7UA/videos",
        "speakers": [],
        "tags": ["@Input", "@Output", "Data Transfer"]
      },
      {
        "slug": "2022-01-03-G",
        "type": "blog",
        "title": "Logging in Angular Application | Angular Logger Service",
        "url": "https://medium.com/@thesiddharthraghuvanshi/logging-in-angular-application-angular-logger-service-8bc90096dcf6",
        "description": "In this article we will see how we can implement logger in any Angular application irrespective of the structure of the project/app. Also at the end of this article I will be attaching a link of Stackblitz for your reference.",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Siddharth Raghuvanshi",
        "authorUrl": "https://medium.com/@thesiddharthraghuvanshi",
        "speakers": ["Siddharth Raghuvanshi"],
        "tags": []
      },
      {
        "slug": "2022-01-03-H",
        "type": "blog",
        "title": "Create Your Own Angular Component Library",
        "url": "https://javascript.plainenglish.io/create-your-own-angular-component-library-e5f062b902a8",
        "description": "Reusing frontend components across different projects is a neat little trick that only a few developers have. It makes your code more readable(if done correctly) and in general keeps it pleasantly organized. Your applications look more consistent and coherent when you reuse your components. Google does this very well, by creating a host of material design components and reusing them across multiple products. This blog post will cover the very basics of building an Angular component library and publishing it to the npm store.",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Akilesh Rao",
        "authorUrl": "https://akileshrao19.medium.com",
        "speakers": ["Akilesh Rao"],
        "tags": ["Libraries", "NPM"]
      },
      {
        "slug": "2022-01-03-J",
        "type": "blog",
        "title": "Mastering Angular Structural Directives",
        "url": "https://betterprogramming.pub/mastering-in-angular-structural-directives-b089186136ef",
        "description": "When we start to learn Angular, we know that there're two types of directives: Attribute and Structural directives. Here we will focus on Structural Directives only. Well, Structural directives allow us to modify the DOM tree of the element, not just the element itself (like Attribute directives do). This includes being able to remove an element and replace it with something else, creating additional elements, and so forth.",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Vladimir Topolev",
        "authorUrl": "https://i-topolev-vladimir.medium.com",
        "speakers": ["Vladimir Topolev"],
        "tags": ["Directives"]
      },
      {
        "slug": "2022-01-03-K",
        "type": "video",
        "duration": "25",
        "title": "Angular 010 Observables",
        "url": "https://www.youtube.com/watch?v=6TtxjiDr4b4",
        "description": "",
        "datePosted": "2022-01-03",
        "dateSource": "2022-01-03",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Nikhil Mittal",
        "authorUrl": "https://www.youtube.com/channel/UCScRs3dYAjSRtnrIVamV6Yg/videos",
        "speakers": ["Nikhil Mittal"],
        "tags": ["RxJS", "Observables"]
      }
    ]
  },
  {
    "date": "2022-01-04",
    "dailyPosts": [
      {
        "slug": "2022-01-04-A",
        "type": "video",
        "duration": "29",
        "title": "Angular - Route Guards - CanDeActivate",
        "url": "https://www.youtube.com/watch?v=oSTFlcWWuz4",
        "description": "",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-03",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Krishna Chaitanya Tech Center",
        "authorUrl": "https://www.youtube.com/channel/UC6hjO6A1FvKKfMlAA7EOJDA/videos",
        "speakers": [],
        "tags": ["Routing", "Route Guards", "canDeactivate"]
      },
      {
        "slug": "2022-01-04-B",
        "type": "blog",
        "title": "Angular material dialog example",
        "url": "https://dev.to/codever/angular-material-dialog-example-26fa",
        "description": "The following example shows the elements required to implement an Angular material dialog to ask the user to log in on Codever, when this is needed (like following tags).\n\nFirst thing add the MatDialogModule in the Angular module where you intend to use the dialog, and the component holding the dialog body (LoginRequiredDialogComponent) to the entryComponents",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Adrian Matei",
        "authorUrl": "https://dev.to/ama",
        "speakers": ["Adrian Matei"],
        "tags": ["Angular Material", "Dialog"]
      },
      {
        "slug": "2022-01-04-C",
        "type": "blog",
        "title": "Using tailwind 3.0 with Angular 13",
        "url": "https://dev.to/edoriatiri/using-tailwind-30-with-angular-13-3cg9",
        "description": "Integrating tailwind into Angular was a somewhat cumbersome process before version 11.2, Angular 11.2 came with native support for Tailwindcss and eased the process of installing and making use of tailwind on the platform.\n\nWith the latest version of Tailwindcss (v3) Integrating tailwind with Angular has become even easier. This version of tailwind (v3) brings a raft of improvements including JIT all the time, an extended color palette, arbitrary properties amongst many other upgrades.",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Edori Atiri",
        "authorUrl": "https://dev.to/edoriatiri",
        "speakers": ["Edori Atiri"],
        "tags": ["TailwindCSS"]
      },
      {
        "slug": "2022-01-04-D",
        "type": "blog",
        "title": "Angular - Working with components hierarchy",
        "url": "https://dev.to/josec/angular-working-with-components-hierarchy-54mp",
        "description": "I will create a very basic app that is just a list and a form and buttons to add and remove elements to that list. At first I will do everything on the app.component to later refactor it using smart and dumb components",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Jose",
        "authorUrl": "https://dev.to/josec",
        "speakers": [],
        "tags": ["Components", "Architecture"]
      },
      {
        "slug": "2022-01-04-F",
        "type": "video",
        "duration": "5",
        "title": "Angular - How to get params from url using router",
        "url": "https://www.youtube.com/watch?v=PMeFCSeKX9A",
        "description": "Angular tutorial. This is example how to get params from url using router.",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Alex Khymenko",
        "authorUrl": "https://www.youtube.com/channel/UCc6U8t63AXf1twGg6qiK9fA/videos",
        "speakers": ["Alex Khymenko"],
        "tags": ["Routing"]
      },
      {
        "slug": "2022-01-04-G",
        "type": "blog",
        "title": "Create dynamic nested menu items in Angular",
        "url": "https://dev.to/prayatna/create-dynamic-nested-menu-items-in-angular-11hm",
        "description": "I was looking for ways to create a dynamic menu where we get list of menu items from the api and I came across this stackoverflow question\n\nThis explains how to use ngTemplateOutlet to call your own custom template to populate the menu item by referencing the same template again.",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Prayatna Bhattarai",
        "authorUrl": "https://dev.to/prayatna",
        "speakers": ["Prayatna Bhattarai"],
        "tags": ["ngTemplateOutlet", "Dynamic", "Menu"]
      },
      {
        "slug": "2022-01-04-H",
        "type": "video",
        "duration": "17",
        "title": "Structural Directives in Angular - How to Create Custom Directive (2022)",
        "url": "https://www.youtube.com/watch?v=07CaGlbMPbw",
        "description": "With this video tutorial, I would like to start a video series dedicated to structural directives in Angular. This kind of directive is a very powerful tool that allows you to manipulate with DOM elements and reshare that logic across your Angular application. From this video, you will learn how to create a custom structural directive and how to make your directive configurable by using a special micro syntax designed specifically for this kind of directive.",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Decoded Frontend",
        "authorUrl": "https://www.youtube.com/c/DecodedFrontend/videos",
        "speakers": ["Dmytro Mezhenskyi"],
        "tags": ["Directives", "Custom"]
      },
      {
        "slug": "2022-01-04-J",
        "type": "blog",
        "title": "Passing Data with Angular Services",
        "url": "https://dev.to/this-is-angular/passing-data-with-angular-services-4mh",
        "description": "If you followed this Angularization series, you might have noticed that passing data using @input and @output decorators is not exactly scalable.\n\nUsing services, it is easier to store data and make it available in the application.",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Lorenzo Zarantonello",
        "authorUrl": "https://dev.to/lorenzojkrl",
        "speakers": ["Lorenzo Zarantonello"],
        "tags": ["Services"]
      },
      {
        "slug": "2022-01-04-K",
        "type": "blog",
        "title": "Reusable Presentational Components in Angular 6+",
        "url": "https://medium.com/tech-prescient/have-you-ever-felt-the-pain-of-writing-and-maintaining-the-same-piece-of-code-at-multiple-places-4f8206622a8d",
        "description": "Have you ever felt the pain of writing and maintaining the same piece of code at multiple places? It could be a small code snippet or a third-party component, the pain and frustration are constant.",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Gajera Riddhi",
        "authorUrl": "https://medium.com/@riddhigajera94",
        "speakers": ["Gajera Riddhi"],
        "tags": ["Components"]
      },
      {
        "slug": "2022-01-04-L",
        "type": "video",
        "duration": "16",
        "title": "How to use the Ionic 6 Accordion Component",
        "url": "https://www.youtube.com/watch?v=41fe14lhfBs",
        "description": "Let's dive into the new Ionic 6 Accordion component and explore what's possible and how to style the accordion with CSS parts!",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Simon Grimm",
        "authorUrl": "https://www.youtube.com/user/saimon1924/videos",
        "speakers": ["Simon Grimm"],
        "tags": ["Ionic"]
      },
      {
        "slug": "2022-01-04-M",
        "type": "blog",
        "title": "Adding the Progressive Web Application (PWA) to an Angular application",
        "url": "https://dev.to/rodrigokamada/adding-the-progressive-web-application-pwa-to-an-angular-application-4g1e",
        "description": "@angular/pwa is a library with Angular service worker support that provides a user experience as if the application were designed to run on your operating system and hardware.",
        "datePosted": "2022-01-04",
        "dateSource": "2022-01-04",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Rodrigo Kamada",
        "authorUrl": "https://dev.to/rodrigokamada",
        "speakers": ["Rodrigo Kamada"],
        "tags": ["PWA"]
      }
    ]
  },
  {
    "date": "2022-01-05",
    "dailyPosts": [
      {
        "slug": "2022-01-05-A",
        "type": "blog",
        "title": "Content Projection in Angular",
        "url": "https://www.thisdot.co/blog/content-projection-in-angular",
        "description": "Imagine yourself at a movie theater. No matter what theater you go to, or what movie you see, you'll notice some very similar things - most notably, the large screen the movie plays on. This screen is an excellent example of a reusable object - it can show any movie projected onto it! The screen doesn't need to know the details of the movie it's playing - all it does is show whatever content is projected onto it.\n\nThis is a similar idea to how content projection works in web development! Today, we'll go over what content projection looks like and how you can use it to make components that are reusable and less tied to the data they display.\n\nWe'll be using Angular for these examples, but any framework you'd like to use likely has a way to do this as well!",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-04",
        "sourceSite": "This Dot Labs",
        "sourceUrl": "https://www.thisdot.co/blog?tag=angular&filter=Angular#result",
        "authorName": "Linda Thompson",
        "authorUrl": "https://www.thisdot.co/author/linda-thompson",
        "speakers": ["Linda Thompson"],
        "tags": ["Content Projection", "ng-content"]
      },
      {
        "slug": "2022-01-05-B",
        "type": "video",
        "duration": "21",
        "title": "Angular - ViewChild",
        "url": "https://www.youtube.com/watch?v=E-1hyj_Cjr8",
        "description": "",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-04",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Krishna Chaitanya Tech Center",
        "authorUrl": "https://www.youtube.com/channel/UC6hjO6A1FvKKfMlAA7EOJDA/videos",
        "speakers": [],
        "tags": ["@ViewChild"]
      },
      {
        "slug": "2022-01-05-C",
        "type": "video",
        "duration": "21",
        "title": "Angular - Global Error Handler Service",
        "url": "https://www.youtube.com/watch?v=JJ-0FtaySPY",
        "description": "",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-04",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Krishna Chaitanya Tech Center",
        "authorUrl": "https://www.youtube.com/channel/UC6hjO6A1FvKKfMlAA7EOJDA/videos",
        "speakers": [],
        "tags": ["Services"]
      },
      {
        "slug": "2022-01-05-D",
        "type": "video",
        "duration": "31",
        "title": "How to Make Responsive Header In Angular",
        "url": "https://www.youtube.com/watch?v=gg0-WMVQbdQ",
        "description": "In this video I have shown how to make Responsive Header in Angular.",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-04",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Creative Developer",
        "authorUrl": "https://www.youtube.com/c/CreativeDeveloper/videos",
        "speakers": [],
        "tags": []
      },
      {
        "slug": "2022-01-05-E",
        "type": "blog",
        "title": "[Angular] Why using ElementRef to manipulate DOM is no more a good idea!",
        "url": "https://sushantmakin.medium.com/angular-why-using-elementref-to-manipulate-dom-is-no-more-a-good-idea-f79ae29b6d74",
        "description": "One of the benefits that frameworks like Angular & React provide us over the regular HTML-JS solutions is an easier, better & faster DOM Manipulation. DOM is basically an API that is used to interface the document with. If you want to change any HTML element on the page, you can interact with the DOM API.",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Sushant Makin",
        "authorUrl": "https://sushantmakin.medium.com/",
        "speakers": ["Sushant Makin"],
        "tags": ["ElementRef"]
      },
      {
        "slug": "2022-01-05-F",
        "type": "blog",
        "title": "Angular product viewer.",
        "url": "https://medium.com/@akleshsiingh/angular-product-viewer-f2ad59cf69c",
        "description": "I am going to keep as as simple as i can, few days back i dive into a product page and i needed to create product viewer for this website and just for fun i thought to create this feature natively, without using any external libraries.\n\nImage viewer features, Use can see and select different thumbs, On selecting any thumbnail, use can see enlarged selected images by hovering over selected image.",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Aklesh Singh",
        "authorUrl": "https://medium.com/@akleshsiingh",
        "speakers": ["Aklesh Singh"],
        "tags": []
      },
      {
        "slug": "2022-01-05-G",
        "type": "video",
        "duration": "4",
        "title": "A quick tip for reacting to @Input changes in Angular",
        "url": "https://www.youtube.com/watch?v=G3crnOmiSg4",
        "description": "In this video, we take a look at how to use setters to automatically run some logic when an input to an Angular component changes.",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Joshua Morony",
        "authorUrl": "https://www.youtube.com/c/CreativeDeveloper/videos",
        "speakers": ["Joshua Morony"],
        "tags": ["RxJS", "Observables", "@Input", "Data Transfer"]
      },
      {
        "slug": "2022-01-05-H",
        "type": "blog",
        "title": "Angular/Karma unit tests: An error was thrown in afterAll",
        "url": "https://medium.com/@moritz.benzenhoefer/angular-karma-unit-tests-an-error-was-thrown-in-afterall-a2ae8dd279fd",
        "description": "When testing your Angular application you might already have experienced this error within your test runs: An error was thrown in afterAll",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Moritz Benzenhöfer",
        "authorUrl": "https://medium.com/@moritz.benzenhoefer",
        "speakers": ["Moritz Benzenhöfer"],
        "tags": ["Testing"]
      },
      {
        "slug": "2022-01-05-J",
        "type": "blog",
        "title": "How to Use Angular FormArray(s) within FormGroup(s) In Reactive Forms",
        "url": "https://dontpaniclabs.com/blog/post/2022/01/05/how-to-use-angular-formarrays-within-formgroups-in-reactive-forms/",
        "description": "Are you trying to use a FormArray on a dynamic/reactive Angular Form, but it is not working? This should help you solve your problem.",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Chris Niemann",
        "authorUrl": "https://dontpaniclabs.com/blog/post/author/cniemann/",
        "speakers": ["Chris Niemann"],
        "tags": ["Forms", "Reactive Forms", "FormArray", "FormGroup", "Dynamic"]
      },
      {
        "slug": "2022-01-05-K",
        "type": "video",
        "duration": "81",
        "title": "Use Dynamic Components in Angular - Part 3 - Writing forms",
        "url": "https://www.youtube.com/watch?v=Qjq1vS4D6bs",
        "description": "",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Good Coding",
        "authorUrl": "https://www.youtube.com/channel/UC3KizHS6zTsP-Es-kBz36Hw/videos",
        "speakers": [],
        "tags": ["Components", "Forms", "Dynamic"]
      },
      {
        "slug": "2022-01-05-L",
        "type": "blog",
        "title": "How to Build a Micro Frontend with Webpack's Module Federation Plugin",
        "url": "https://dev.to/bitovi/how-to-build-a-micro-frontend-with-webpacks-module-federation-plugin-n41",
        "description": "Here is a quick intro to the Module Federation Plugin, followed by detailed step-by-step instructions on how to implement it in an actual application.",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Idris Shedu",
        "authorUrl": "https://dev.to/ishedu",
        "speakers": ["Idris Shedu"],
        "tags": ["Micro Frontends", "Module Federation"]
      },
      {
        "slug": "2022-01-05-M",
        "type": "blog",
        "title": "Getting rid of NgModule in Angular",
        "url": "https://medium.com/@antmihlin/getting-rid-of-ngmodule-in-angular-javascript-43fd510779bc",
        "description": "Working many years with Angular I found it hard to create the structure of a project. The main reason for that struggle lay behind the way Angular interacts with components and modules. The following article explains what is the issue with NgModule and whether is going to change in the foreseeable future.",
        "datePosted": "2022-01-05",
        "dateSource": "2022-01-05",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Anton Mihlin",
        "authorUrl": "https://medium.com/@antmihlin",
        "speakers": ["Anton Mihlin"],
        "tags": ["Modules"]
      }
    ]
  },
  {
    "date": "2022-01-06",
    "dailyPosts": [
      {
        "slug": "2022-01-06-A",
        "type": "blog",
        "title": "Angular Basics: Introduction to Observables (RxJS)—Part 1",
        "url": "https://www.telerik.com/blogs/angular-basics-introduction-observables-rxjs-part-1",
        "description": "In the first article of two parts, we'll cover the basics of observables, observers and RxJS.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-05",
        "sourceSite": "Progress Telerik",
        "sourceUrl": "https://www.telerik.com/blogs/web-angular",
        "authorName": "Ashnita Bali",
        "authorUrl": "https://www.telerik.com/blogs/author/ashnita-bali",
        "speakers": ["Ashnita Bali"],
        "tags": ["RxJS", "Observables"]
      },
      {
        "slug": "2022-01-06-B",
        "type": "blog",
        "title": "Angular Universal: Do's and Don'ts",
        "url": "https://medium.com/@leandromerli/angular-universal-do-and-dont-c34ba07ef480",
        "description": "Angular Universal can be described as the process of rendering your application to HTML on the Server (ie: Node.js) aka server-side rendering (SSR), as opposed to typical Angular applications such as Single-Page Applications (SPA's) where the rendering occurs on the Browser, a process that can also be referred to as client-side rendering (CSR).",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-05",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Leandro Merli",
        "authorUrl": "https://medium.com/@leandromerli",
        "speakers": ["Leandro Merli"],
        "tags": ["Angular Universal"]
      },
      {
        "slug": "2022-01-06-C",
        "type": "video",
        "duration": "6",
        "title": "RxJS Tutorial For Beginners #18 - Distinct Operator Tutorial",
        "url": "https://www.youtube.com/watch?v=QrIheZ1kbuo",
        "description": "Angular RxJS Distinct operator tutorial.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "ARC Tutorials",
        "authorUrl": "https://www.youtube.com/c/ARCTutorials/videos",
        "speakers": ["Sridhar Rao"],
        "tags": ["RxJS", "distinct"]
      },
      {
        "slug": "2022-01-06-D",
        "type": "podcast",
        "duration": "56",
        "title": "Episode 165: Setting up Enterprise Frontend for Success",
        "url": "https://webrush.io/episodes/episode-165-setting-up-enterprise-frontend-for-success",
        "description": "Alex Okrushko talks with us about his recommended 9 ways to setting app development up for front end success, including monorepos, feature flagging, trunk based development, better PRs, automatic help, testing, feature plans, and daily releases.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "Web Rush",
        "sourceUrl": "https://webrush.io",
        "authorName": "Alex Okrushko",
        "authorUrl": "https://twitter.com/alexokrushko",
        "speakers": ["Alex Okrushko"],
        "tags": []
      },
      {
        "slug": "2022-01-06-E",
        "type": "video",
        "duration": "19",
        "title": "Projecting content in Angular, by Paulo Souza",
        "url": "https://www.youtube.com/watch?v=uxQQpjNJJ8k",
        "description": "A short introduction to one of Angular's most often confusing topics for beginners: content projection. This is a powerful feature of the framework that allows for great flexibility in customizing and composing components. We'll see how to use content tags to project one or more child components into their parent, how template references work, and how to use them effectively.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Codeminer42",
        "authorUrl": "https://www.youtube.com/c/Codeminer42TV/videos",
        "speakers": ["Paulo Souza"],
        "tags": ["Content Projection", "@ContentChild", "ng-content", "ng-container", "ng-template", "ngTemplateOutlet"]
      },
      {
        "slug": "2022-01-06-F",
        "type": "blog",
        "title": "Turn your Single Page Application into an Artifact with Azure DevOps",
        "url": "https://dev.to/blairlierman/turn-your-single-page-application-into-an-artifact-with-azure-devops-4a05",
        "description": "In order to use the output from a build in Azure DevOps later, you need to publish it as a Build Artifact. This article will show you how to configure that.  This examples uses an Angular based Single Page Application (SPA) build using the Nx monorepo tools, however the general process can be applied to any SPA framework once you know the build commands.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Blair Lierman",
        "authorUrl": "https://dev.to/blairlierman",
        "speakers": ["Blair Lierman"],
        "tags": ["Azure"]
      },
      {
        "slug": "2022-01-06-G",
        "type": "blog",
        "title": "Application Structure and Best Practices Of Angular — Part 2",
        "url": "https://medium.com/nonstopio/application-structure-and-best-practices-of-angular-part-2-e00a80f5483b",
        "description": "This is part 2 of Angular best practices, in the first part we learn about Angular CLI, modular structure of Angular application, lazy loading, and lifecycle hooks of Angular (detailed story here).\n\nIn this part, we will look into the folder structure and nomenclature, coding styles of Angular applications. For a better understanding of code, we need this thing in our life.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Ankita Joshi",
        "authorUrl": "https://medium.com/@ankita.joshi_64658",
        "speakers": ["Ankita Joshi"],
        "tags": ["Architecture"]
      },
      {
        "slug": "2022-01-06-H",
        "type": "blog",
        "title": "Angular & Google Analytics — The Complete Guide",
        "url": "https://dkreider.medium.com/angular-google-analytics-the-complete-guide-6518736096a0",
        "description": "https://dkreider.medium.com",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Daniel Kreider",
        "authorUrl": "https://dkreider.medium.com",
        "speakers": ["Daniel Kreider"],
        "tags": ["Google Analytics"]
      },
      {
        "slug": "2022-01-06-J",
        "type": "blog",
        "title": "You shouldn't use EventEmitters in Angular services",
        "url": "https://dev.to/geromegrignon/you-shouldnt-use-eventemitters-in-angular-services-8fa",
        "description": "By reviewing Angular code daily through mentoring or community support, I happen to find EventEmitters being used in Angular services.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Gerome Grignon",
        "authorUrl": "https://dev.to/geromegrignon",
        "speakers": ["Gerome Grignon"],
        "tags": ["Services", "EventEmitter"]
      },
      {
        "slug": "2022-01-06-K",
        "type": "blog",
        "title": "Split Complex Forms in Angular with ControlContainer",
        "url": "https://medium.com/@talhakhalid101/splitting-complex-forms-in-angular-with-controlcontainer-6903b4f2e592",
        "description": "Developing complex forms can become a challenging task, especially when we need to deal with a lot of validation and component reuse. In Angular, we have Reactive Forms that provide several tools to deal with these situations, and within this package, we have the ControlContainer, a class that helps to better manage our forms.",
        "datePosted": "2022-01-06",
        "dateSource": "2022-01-06",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Talha Khaild",
        "authorUrl": "https://medium.com/@talhakhalid101",
        "speakers": ["Talha Khaild"],
        "tags": ["Forms"]
      }
    ]
  },
  {
    "date": "2022-01-07",
    "dailyPosts": [
      {
        "slug": "2022-01-07-A",
        "type": "podcast",
        "duration": "50",
        "title": "PWAs ft. Patricio Vargas",
        "url": "https://adventuresinangular.com/pwas-ft-patricio-vargas",
        "description": "Ever feel like a damsel in distress held captive by app limitations? Never fear! In this episode, Charles and Sani sit down with Patricio Vargas, a software developer who's an expert on PWA's and enriching the customer experience. They cover why PWA's have \"superpowers\", a user statistic that will scare the connection issues right out of you, and why Clubhouse fell from grace (and what others apps can learn from it).",
        "datePosted": "2022-01-07",
        "dateSource": "2022-01-06",
        "sourceSite": "Devchat.tv",
        "sourceUrl": "https://devchat.tv",
        "authorName": "Adventures In Angular",
        "authorUrl": "https://devchat.tv/show/adventures-in-angular/",
        "speakers": ["Patricio Vargas"],
        "tags": ["PWA"]
      },
      {
        "slug": "2022-01-07-B",
        "type": "video",
        "duration": "12",
        "title": "How to implement time-based caching using HTTP Interceptor in Angular",
        "url": "https://youtu.be/G4B8LrAK3dw?t=5",
        "description": "Implementing time-based caching in Angular using HTTP Interceptor is simple and easy. This post shows step by step process of creating simple caching logic for all outgoing HTTP GET API calls.",
        "datePosted": "2022-01-07",
        "dateSource": "2022-01-07",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Learn Smart Coding",
        "authorUrl": "https://www.youtube.com/channel/UCKUxSY2xp12QiP3c60sOc-g/videos",
        "speakers": [],
        "tags": ["HttpInterceptors"]
      },
      {
        "slug": "2022-01-07-C",
        "type": "blog",
        "title": "Interface vs Type Alias in TypeScript—Quick Comparison",
        "url": "https://dev.to/zwacky/interface-vs-type-alias-in-typescript-quick-comparison-2g37",
        "description": "This can be confusing for anyone working with TypeScript—beginner or seasoned programmer. Both ways can cover similar needs.\n\nIn this post you'll quickly see what Typescript feature is possible to implement as Type Alias or Interface. I stayed brief and spicy to give the post an overview character.",
        "datePosted": "2022-01-07",
        "dateSource": "2022-01-07",
        "sourceSite": "DEV Community",
        "sourceUrl": "https://dev.to",
        "authorName": "Simon Wicki",
        "authorUrl": "https://dev.to/zwacky",
        "speakers": ["Simon Wicki"],
        "tags": ["TypeScript"]
      },
      {
        "slug": "2022-01-07-D",
        "type": "blog",
        "title": "Angular by practicing",
        "url": "https://poub330.medium.com/discover-angular-by-practicing-a926b0e8d01",
        "description": "I use all the best practices:\n- business code in the services\n- typing with TypeScript\n- use of reactive programming with RxJS\n- the decomposition of the functionality in several web components (divide and conquer) to facilitate maintenance, testing, reusability….",
        "datePosted": "2022-01-07",
        "dateSource": "2022-01-07",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "nuke",
        "authorUrl": "https://poub330.medium.com",
        "speakers": [],
        "tags": []
      },
      {
        "slug": "2022-01-07-E",
        "type": "blog",
        "title": "Angular Modules part 1 — Understanding NgModule",
        "url": "https://medium.com/@MicBDev/angular-modules-part-1-understanding-ngmodule-6155c7038fd5",
        "description": "This article is the first of a series about in depth understanding of Angular Modules and details introduction concepts. The next two articles are discussing feature modules and optimizing your application with lazy loading.",
        "datePosted": "2022-01-07",
        "dateSource": "2022-01-07",
        "sourceSite": "Medium",
        "sourceUrl": "https://medium.com",
        "authorName": "Mic B",
        "authorUrl": "https://medium.com/@MicBDev",
        "speakers": [],
        "tags": ["Modules"]
      },
      {
        "slug": "2022-01-07-F",
        "type": "video",
        "duration": "69",
        "title": "AngularAir - derxjs Project with Zack DeRose",
        "url": "https://www.youtube.com/watch?v=KRM4cQdw3j0",
        "description": "",
        "datePosted": "2022-01-07",
        "dateSource": "2022-01-07",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "AngularAir",
        "authorUrl": "https://www.youtube.com/c/AngularAirPodcast/videos",
        "speakers": ["Zack DeRose", "Justin Schwartzenberger", "Mike Brocci"],
        "tags": []
      },
      {
        "slug": "2022-01-07-G",
        "type": "video",
        "duration": "56",
        "title": "Angular team plays game and answers your questions LIVE | January 2022",
        "url": "https://youtu.be/byhDwknIrCA?t=22",
        "description": "Join members of the Angular team as we play some games and answer your questions. See you there!",
        "datePosted": "2022-01-07",
        "dateSource": "2022-01-07",
        "sourceSite": "YouTube",
        "sourceUrl": "https://www.youtube.com/results?search_query=angular",
        "authorName": "Angular",
        "authorUrl": "https://www.youtube.com/c/Angular/videos",
        "speakers": ["Mark Thompson", "Jeremy Elbourn"],
        "tags": []
      }
    ]
  }
]